<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

  <!-- hibernate数据源 
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <property name="url" value="${jdbc_url}"></property>
    <property name="username" value="${jdbc_username}"></property>
    <property name="password" value="${jdbc_password}"></property>
    <property name="initialSize" value="0"></property>
    <property name="maxActive" value="20"></property>
    <property name="minIdle" value="0"></property>
    <property name="maxWait" value="60000"></property>
    <property name="validationQuery" value="${validationQuery}"></property>
    <property name="testOnBorrow" value="false"></property>
    <property name="testOnReturn" value="false"></property>
    <property name="testWhileIdle" value="true"></property>
    <property name="timeBetweenEvictionRunsMillis" value="60000" />
    <property name="minEvictableIdleTimeMillis" value="25200000" />
    <property name="removeAbandoned" value="true" />
    <property name="removeAbandonedTimeout" value="1800" />
    <property name="logAbandoned" value="true" />
    <property name="filters" value="mergeStat" />
  </bean>
  -->
  
  <!-- 数据源定义, 使用HikariCP 连接池 -->
  <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
    <property name="driverClassName" value="${jdbc.driverClassName}" />
    <property name="jdbcUrl" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
    <property name="connectionTimeout" value="${pool.maxWait}" />
    <!-- 连接池最小空闲 -->
    <property name="minimumIdle" value="${pool.minIdle}" />
    <!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
    <property name="idleTimeout" value="600000" />
    <!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒， 参考MySQL wait_timeout参数（show variables like '%timeout%';） -->
    <property name="maxLifetime" value="60000" />
    <!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
    <property name="maximumPoolSize" value="${pool.maxActive}" />
  </bean>

  <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
        <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
        <prop key="cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
        <prop key="cache.region.factory_class">${org.hibernate.cache.EhCacheRegionFactory}</prop>
      </props>
    </property>
    <property name="packagesToScan">
      <list>
        <value>com.kindustry.erp.model</value>
        <value>com.kindustry.supermarket.model</value>
      </list>
    </property>
  </bean>

  <!-- 配置 HibernateTemplate 对象 -->
  <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
    <!-- 注入 SessionFactory 对象 -->
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!-- 事务 -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!-- 数据库事务配置 -->
  <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="add*" propagation="REQUIRED" />
      <tx:method name="save*" propagation="REQUIRED" />
      <tx:method name="upd*" propagation="REQUIRED" />
      <tx:method name="update*" propagation="REQUIRED" />
      <tx:method name="modify*" propagation="REQUIRED" />
      <tx:method name="edit*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" />
      <tx:method name="del*" propagation="REQUIRED" />
      <tx:method name="delete*" propagation="REQUIRED" />
      <tx:method name="remove*" propagation="REQUIRED" />
      <tx:method name="repair" propagation="REQUIRED" />
      <tx:method name="persistence*" propagation="REQUIRED" />
      <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
      <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
      <tx:method name="load*" propagation="SUPPORTS" read-only="true"/>
      <tx:method name="search*" propagation="SUPPORTS" read-only="true"/>
    </tx:attributes>
  </tx:advice>
  
  <aop:config>
    <aop:pointcut id="transactionPointcut" expression="execution(* com.kindustry.*.service..*(..))" />
    <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
  </aop:config>

  <!-- druid 
  <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"></bean>
  <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
    <property name="patterns">
      <list>
        <value>com.kindustry.*.service.*</value>
      </list>
    </property>
  </bean>
  <aop:config>
    <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
  </aop:config>
  -->

</beans>